install.packages("nnDiag")
rm(list = ls())      # Clear all variables
graphics.off()    # Close graphics windows
library("lattice")
library("hier.part")
library("corrplot")
library("zoo")
library("lubridate")
library("stats")
# library("RAtmosphere")
# library("verification")
library("plotrix")
library("nnDig")
install.packages("F:/foreach_1.4.1.zip", repos = NULL)
install.packages("F:/plyr_1.8.zip", repos = NULL)
install.packages("F:/mclust_4.2.zip", repos = NULL)
library(mclust)
faithfulMcust <- Mclust(faithful)
faithfulMcust
summary(faithfulMcust)
faithful
names(faithfulMclust)
names(faithfulMcust)
faithfulMcust$parameters
names(faithfulMcust)
faithfulMcust$uncertainty
install.packages("F:/plotrix_3.5-3.zip", repos = NULL)
rm(list = ls())      # Clear all variables
graphics.off()    # Close graphics windows
library("lattice")
library("hier.part")
library("corrplot")
library("zoo")
library("lubridate")
library("stats")
library("RAtmosphere")
library("plotrix")
#library("nnDiag")
install.packages(c("corrplot", "DEoptim", "EcoHydRology", "fields", "gstat", "gtools", "lubridate", "plyr", "RAtmosphere", "sp", "spacetime", "spam", "stringr", "verification", "waveslim", "XML", "xts"))
# quantile(Tsurf, c(0.25,0.5, 0.75), na.rm=T); median(Tsurf, na.rm=T)
rm(list = ls())      # Clear all variables
graphics.off()    # Close graphics windows
library(zoo)
###set path
path <- c("C:/Users/h.ahrends/Documents/TR32_Data/Field2013/Sebastian")
setwd(path)
### read data
Data_SE <- read.table("SE_EC_001_meteo_Hella.txt", dec=".", sep="\t", header=TRUE)  ## mit AOIMEAN
Data_EN <- read.table("EN_EC_001_meteo_Hella.txt", dec=".", sep="\t", header=TRUE)  ## mit AOIMEAN
attach(Data_SE)
#calculate vapor pressure etc.
Tair <- t_hmp_mean
TairK <- Tair+237.3
SVPress <- 610.78*10^((7.5*Tair)/(237.3+Tair))       # SatVaporPressure(Tair) in Pascal
AirP <-   press_mean       # Air pressure hPa
AirP_Kpa <- AirP*0.1				# Air pressure kPa
AVDens <- h2o_Avg        ## actual vapor density  (g/m3)
AVDens_kg <- h2o_Avg/1000        ## actual vapor density  (kg/m3)
lambda = (2.501 - 0.00237 * Tair) * 10^6/1000
slope <-(2504*exp((17.27*Tair)/(Tair+237.3))) /((Tair+237.3)^2)    #slope of the saturation vapor pressure curve at Tair kPa/??C:
slope_Pa <- slope*1000
VPress <-  ((AVDens/1000) *TairK)/0.002166     ##partial vapor pressure (Pa)
SVDens <- 0.002166*SVPress/(Tair + 273.16)  ##saturation vapor density  (kg/m3)
RH <- (AVDens_kg/SVDens)*100
VPD <- ((100-RH)/100)*SVPress       # Air vapour pressure deficit (Pa)
VPD_kPa <- VPD/1000
VPress_hPa <- VPress/100
AirP_hPa <- AirP*10
t_ <- c(1:144)
year <- c(1:144)
year <- 2012
#########################################################################################
####################################################################prepare data subsets
Subset_Data <- as.data.frame(matrix(nrow=144, ncol=1))
Subset_Data$year <- year
Subset_Data$p <- AirP_hPa
Subset_Data$Ta <- Tair
Subset_Data$ea <- VPress_hPa
Subset_Data$u <- rslt_wnd_spd
Subset_Data$Rin <- Rs_downwell_Avg
Subset_Data$PAR <- PAR_Avg
Subset_Data$Rli <- Rl_downwell_Avg
Subset_Data$Rn <- Rn_nr01_Avg
Subset_Data$SW <- soil_water_T_Avg.2.
Subset_Data$CO2 <- co2_mean
Subset_Data$RH <- RH
Subset_Data$VPD <- VPD
Subset_Data$Precip <- precip_Tot
Subset_Data_new <- Subset_Data
# #### interpolate time series data (missing values)
for(i in 2:ncol(Subset_Data)){
dummy <- zoo(Subset_Data[,i],t_)
Subset_Data_new[,i] <- na.approx(object=dummy,
rule=2)
}
##################################
########
###########################################################################################
setwd("C:/Users/h.ahrends/Documents/SCOPE/data/input/dataset for_SE/")
write.table(Subset_Data$ea, "ea_.dat", col.names=F, row.names=F)
write.table(Subset_Data$year, "year_.dat", col.names=F, row.names=F)
write.table(Subset_Data$CO2, "CO2_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rli, "Rli_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rn, "Rn_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rin, "Rin_.dat", col.names=F, row.names=F)
write.table(Subset_Data$u, "u_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Ta, "Ta_.dat", col.names=F, row.names=F)
write.table(Subset_Data$SW, "SW_.dat", col.names=F, row.names=F)
write.table(Subset_Data$p, "p_.dat", col.names=F, row.names=F)
detach(Data_SE)
############################################################
########
################################################################
attach(Data_EN)
precip_Tot[] <- 0
#calculate vapor pressure etc.
Tair <- t_hmp_mean
TairK <- Tair+237.3
SVPress <- 610.78*10^((7.5*Tair)/(237.3+Tair))       # SatVaporPressure(Tair) in Pascal
AirP <-   press_mean       # Air pressure hPa
AirP_Kpa <- AirP*0.1				# Air pressure kPa
AVDens <- h2o_Avg        ## actual vapor density  (g/m3)
AVDens_kg <- h2o_Avg/1000        ## actual vapor density  (kg/m3)
lambda = (2.501 - 0.00237 * Tair) * 10^6/1000
slope <-(2504*exp((17.27*Tair)/(Tair+237.3))) /((Tair+237.3)^2)    #slope of the saturation vapor pressure curve at Tair kPa/??C:
slope_Pa <- slope*1000
VPress <-  ((AVDens/1000) *TairK)/0.002166     ##partial vapor pressure (Pa)
SVDens <- 0.002166*SVPress/(Tair + 273.16)  ##saturation vapor density  (kg/m3)
RH <- (AVDens_kg/SVDens)*100
VPD <- ((100-RH)/100)*SVPress       # Air vapour pressure deficit (Pa)
VPD_kPa <- VPD/1000
VPress_hPa <- VPress/100
AirP_hPa <- AirP*10
t_ <- c(1:144)
year <- c(1:144)
year <- 2012
#########################################################################################
####################################################################prepare data subsets
Subset_Data <- as.data.frame(matrix(nrow=144, ncol=1))
Subset_Data$year <- year
Subset_Data$p <- AirP_hPa
Subset_Data$Ta <- Tair
Subset_Data$ea <- VPress_hPa
Subset_Data$u <- rslt_wnd_spd
Subset_Data$Rin <- Rs_downwell_Avg
Subset_Data$PAR <- PAR_Avg
Subset_Data$Rli <- Rl_downwell_Avg
Subset_Data$Rn <- Rn_nr01_Avg
Subset_Data$SW <- soil_water_T_Avg.2.
Subset_Data$CO2 <- co2_mean
Subset_Data$RH <- RH
Subset_Data$VPD <- VPD
Subset_Data$Precip <- precip_Tot
Subset_Data_new <- Subset_Data
# #### interpolate time series data (missing values)
for(i in 2:ncol(Subset_Data)){
dummy <- zoo(Subset_Data[,i],t_)
Subset_Data_new[,i] <- na.approx(object=dummy,
rule=2)
}
##################################
########
###########################################################################################
setwd("C:/Users/h.ahrends/Documents/SCOPE/data/input/dataset for_EN/")
write.table(Subset_Data$ea, "ea_.dat", col.names=F, row.names=F)
write.table(Subset_Data$year, "year_.dat", col.names=F, row.names=F)
write.table(Subset_Data$CO2, "CO2_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rli, "Rli_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rn, "Rn_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Rin, "Rin_.dat", col.names=F, row.names=F)
write.table(Subset_Data$u, "u_.dat", col.names=F, row.names=F)
write.table(Subset_Data$Ta, "Ta_.dat", col.names=F, row.names=F)
write.table(Subset_Data$SW, "SW_.dat", col.names=F, row.names=F)
write.table(Subset_Data$p, "p_.dat", col.names=F, row.names=F)
detach(Data_EN)
rm(list = ls())      # Clear all variables
graphics.off()    # Close graphics windows
library(zoo)
###set path
path <- c("C:/Users/h.ahrends/Documents/TR32_Data/Field2013/Sebastian")
setwd(path)
### read data
Data_SE <- read.table("SE_EC_001_meteo_Hella.txt", dec=".", sep="\t", header=TRUE)  ## mit AOIMEAN
Data_EN <- read.table("EN_EC_001_meteo_Hella.txt", dec=".", sep="\t", header=TRUE)  ## mit AOIMEAN
attach(Data_SE)
#calculate vapor pressure etc.
Tair <- t_hmp_mean
TairK <- Tair+237.3
SVPress <- 610.78*10^((7.5*Tair)/(237.3+Tair))       # SatVaporPressure(Tair) in Pascal
AirP <-   press_mean       # Air pressure hPa
AirP_Kpa <- AirP*0.1				# Air pressure kPa
AVDens <- h2o_Avg        ## actual vapor density  (g/m3)
AVDens_kg <- h2o_Avg/1000        ## actual vapor density  (kg/m3)
lambda = (2.501 - 0.00237 * Tair) * 10^6/1000
slope <-(2504*exp((17.27*Tair)/(Tair+237.3))) /((Tair+237.3)^2)    #slope of the saturation vapor pressure curve at Tair kPa/??C:
slope_Pa <- slope*1000
VPress <-  ((AVDens/1000) *TairK)/0.002166     ##partial vapor pressure (Pa)
SVDens <- 0.002166*SVPress/(Tair + 273.16)  ##saturation vapor density  (kg/m3)
RH <- (AVDens_kg/SVDens)*100
VPD <- ((100-RH)/100)*SVPress       # Air vapour pressure deficit (Pa)
VPD_kPa <- VPD/1000
VPress_hPa <- VPress/100
AirP_hPa <- AirP*10
t_ <- c(1:144)
year <- c(1:144)
year <- 2012
#########################################################################################
####################################################################prepare data subsets
Subset_Data <- as.data.frame(matrix(nrow=144, ncol=1))
Subset_Data$year <- year
Subset_Data$p <- AirP_hPa
Subset_Data$Ta <- Tair
Subset_Data$ea <- VPress_hPa
Subset_Data$u <- rslt_wnd_spd
Subset_Data$Rin <- Rs_downwell_Avg
Subset_Data$PAR <- PAR_Avg
Subset_Data$Rli <- Rl_downwell_Avg
Subset_Data$Rn <- Rn_nr01_Avg
Subset_Data$SW <- soil_water_T_Avg.2.
Subset_Data$CO2 <- co2_mean
Subset_Data$RH <- RH
Subset_Data$VPD <- VPD
Subset_Data$Precip <- precip_Tot
Subset_Data_new <- Subset_Data
# #### interpolate time series data (missing values)
for(i in 2:ncol(Subset_Data)){
dummy <- zoo(Subset_Data[,i],t_)
Subset_Data_new[,i] <- na.approx(object=dummy,
rule=2)
}
##################################
########
###########################################################################################
setwd("C:/Users/h.ahrends/Documents/SCOPE/data/input/dataset for_SE/")
write.table(Subset_Data_new$ea, "ea_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$year, "year_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$CO2, "CO2_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rli, "Rli_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rn, "Rn_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rin, "Rin_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$u, "u_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Ta, "Ta_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$SW, "SW_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$p, "p_.dat", col.names=F, row.names=F)
detach(Data_SE)
############################################################
############################################################
################################################################
attach(Data_EN)
precip_Tot[] <- 0
#calculate vapor pressure etc.
Tair <- t_hmp_mean
TairK <- Tair+237.3
SVPress <- 610.78*10^((7.5*Tair)/(237.3+Tair))       # SatVaporPressure(Tair) in Pascal
AirP <-   press_mean       # Air pressure hPa
AirP_Kpa <- AirP*0.1				# Air pressure kPa
AVDens <- h2o_Avg        ## actual vapor density  (g/m3)
AVDens_kg <- h2o_Avg/1000        ## actual vapor density  (kg/m3)
lambda = (2.501 - 0.00237 * Tair) * 10^6/1000
slope <-(2504*exp((17.27*Tair)/(Tair+237.3))) /((Tair+237.3)^2)    #slope of the saturation vapor pressure curve at Tair kPa/??C:
slope_Pa <- slope*1000
VPress <-  ((AVDens/1000) *TairK)/0.002166     ##partial vapor pressure (Pa)
SVDens <- 0.002166*SVPress/(Tair + 273.16)  ##saturation vapor density  (kg/m3)
RH <- (AVDens_kg/SVDens)*100
VPD <- ((100-RH)/100)*SVPress       # Air vapour pressure deficit (Pa)
VPD_kPa <- VPD/1000
VPress_hPa <- VPress/100
AirP_hPa <- AirP*10
t_ <- c(1:144)
year <- c(1:144)
year <- 2012
#########################################################################################
####################################################################prepare data subsets
Subset_Data <- as.data.frame(matrix(nrow=144, ncol=1))
Subset_Data$year <- year
Subset_Data$p <- AirP_hPa
Subset_Data$Ta <- Tair
Subset_Data$ea <- VPress_hPa
Subset_Data$u <- rslt_wnd_spd
Subset_Data$Rin <- Rs_downwell_Avg
Subset_Data$PAR <- PAR_Avg
Subset_Data$Rli <- Rl_downwell_Avg
Subset_Data$Rn <- Rn_nr01_Avg
Subset_Data$SW <- soil_water_T_Avg.2.
Subset_Data$CO2 <- co2_mean
Subset_Data$RH <- RH
Subset_Data$VPD <- VPD
Subset_Data$Precip <- precip_Tot
Subset_Data_new <- Subset_Data
# #### interpolate time series data (missing values)
for(i in 2:ncol(Subset_Data)){
dummy <- zoo(Subset_Data[,i],t_)
Subset_Data_new[,i] <- na.approx(object=dummy,
rule=2)
}
##################################
########
###########################################################################################
setwd("C:/Users/h.ahrends/Documents/SCOPE/data/input/dataset for_EN/")
write.table(Subset_Data_new$ea, "ea_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$year, "year_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$CO2, "CO2_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rli, "Rli_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rn, "Rn_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Rin, "Rin_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$u, "u_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$Ta, "Ta_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$SW, "SW_.dat", col.names=F, row.names=F)
write.table(Subset_Data_new$p, "p_.dat", col.names=F, row.names=F)
detach(Data_EN)
